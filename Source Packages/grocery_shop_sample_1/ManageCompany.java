/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package grocery_shop_sample_1;

import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DILUSHA LAKSHAN
 */
public class ManageCompany extends javax.swing.JFrame {

    /** Creates new form ManageCompany */
    public ManageCompany() {
        initComponents();
        loadCity();
        loadCompanyData();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        cmbCity = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCompany = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 1, 24)); // NOI18N
        jLabel1.setText("MANAGE COMPANY");

        jLabel2.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel2.setText("Email");

        jLabel3.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel3.setText("Company Name");

        jLabel4.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel4.setText("Contact");

        jLabel5.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel5.setText("City");

        txtEmail.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N

        txtName.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N

        txtContact.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N

        cmbCity.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N

        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tblCompany.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        tblCompany.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Email", "Name", "Contact", "City"
            }
        ));
        tblCompany.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCompanyMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCompany);

        jLabel6.setIcon(new javax.swing.ImageIcon("E:\\Images\\AURORA.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtContact, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                            .addComponent(txtEmail)
                            .addComponent(cmbCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(249, 249, 249)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(39, 39, 39))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try{
            String email = txtEmail.getText();
            String name = txtName.getText();
            String contact = txtContact.getText();
            String city = String.valueOf(cmbCity.getSelectedItem());
            
            if(email.isEmpty() == true){
                JOptionPane.showMessageDialog(rootPane, "Enter the Company Email");
            }else if(email.length() > 50){
                JOptionPane.showMessageDialog(rootPane, "Email id is too long");
            }else if(name.isEmpty() == true){
                JOptionPane.showMessageDialog(rootPane, "Enter the Name of the Company");
            }else if(name.length() > 45){
                JOptionPane.showMessageDialog(rootPane, "Name of the company is too long");
            }else if(contact.isEmpty() == true){
                JOptionPane.showMessageDialog(rootPane, "Enter the Contact number");
            }else if(contact.length() != 10){
                JOptionPane.showMessageDialog(rootPane, "Contact Number must have 10 characters");
            }else if(city.isEmpty() == true){
                JOptionPane.showMessageDialog(rootPane, "Select the city");
            }else{
                //get city_id from the city table
                ResultSet cityRS = dbConnection.execute("SELECT * FROM `city` WHERE `name`='"+city+"'");
                if(cityRS.next()){
                    int cityID = cityRS.getInt("id");
                    
                    //insert data into the company table
                    ResultSet companyRS = dbConnection.execute("INSERT INTO `company` (`email`,`name`,`contact`,`city_id`) VALUES ('"+email+"','"+name+"','"+contact+"','"+cityID+"')");
                    JOptionPane.showMessageDialog(rootPane, "Insertion Successful");
                    txtEmail.setText("");
                    txtContact.setText("");
                    txtName.setText("");
                    loadCompanyData();
                }
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblCompanyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCompanyMouseClicked
       try{
           DefaultTableModel model = (DefaultTableModel)tblCompany.getModel();
           int selectedRowIndex = tblCompany.getSelectedRow();
           
           txtEmail.setText(model.getValueAt(selectedRowIndex, 0).toString());
           txtName.setText(model.getValueAt(selectedRowIndex, 1).toString());
           txtContact.setText(model.getValueAt(selectedRowIndex, 2).toString());
           
           txtEmail.setEditable(false);
                   
       }catch(Exception ex){
           JOptionPane.showMessageDialog(rootPane, ex);
       }
    }//GEN-LAST:event_tblCompanyMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try{
            String email = txtEmail.getText();
            String name = txtName.getText();
            String contact = txtContact.getText();
            String city = String.valueOf(cmbCity.getSelectedItem());
            
            if(email.isEmpty() == true){
                JOptionPane.showMessageDialog(rootPane, "Enter the Company Email");
            }else if(email.length() > 50){
                JOptionPane.showMessageDialog(rootPane, "Email id is too long");
            }else if(name.isEmpty() == true){
                JOptionPane.showMessageDialog(rootPane, "Enter the Name of the Company");
            }else if(name.length() > 45){
                JOptionPane.showMessageDialog(rootPane, "Name of the company is too long");
            }else if(contact.isEmpty() == true){
                JOptionPane.showMessageDialog(rootPane, "Enter the Contact number");
            }else if(contact.length() != 10){
                JOptionPane.showMessageDialog(rootPane, "Contact Number must have 10 characters");
            }else if(city.isEmpty() == true){
                JOptionPane.showMessageDialog(rootPane, "Select the city");
            }else{
                //get city id from the city table
                ResultSet cityRS = dbConnection.execute("SELECT * FROM `city` WHERE `name`='"+city+"'");
                if(cityRS.next()){
                    int city_id = cityRS.getInt("id");
                    
                    ResultSet rs = dbConnection.execute("SELECT * FROM `company` WHERE `email`='"+email+"'");
                    if(rs.next()){
                        ResultSet companyRS = dbConnection.execute("UPDATE `company` SET `name`='"+name+"', `contact`='"+contact+"', `city_id`='"+city_id+"' WHERE `email`='"+email+"'");
                        JOptionPane.showMessageDialog(rootPane, "Successfully Updated");
                        loadCompanyData();
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "This email has not been registred. Check the Email again");
                    }
                            
                }
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageCompany().setVisible(true);
            }
        });
    }
    
    //load cities to the combo box
    private void loadCity(){
        try{
            ResultSet cityRS = dbConnection.execute("SELECT * FROM `city`");
            while(cityRS.next()){
                String name = cityRS.getString("name");
                cmbCity.addItem(name);
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }
    
    //clear all data in the table
    private void clearTableData(){
        //code here
    }
    
    //load existing company data to the table
    private void loadCompanyData(){
        try{
            clearTableData();
            ResultSet companyRS = dbConnection.execute("SELECT * FROM `company`");
            while(companyRS.next()){
                String email = companyRS.getString("email");
                String name = companyRS.getString("name");
                String contact = companyRS.getString("contact");
                String cityID = String.valueOf(companyRS.getInt("city_id"));
                
                String tbData[] = {email,name,contact,cityID};
                DefaultTableModel tblModel = (DefaultTableModel)tblCompany.getModel();
                tblModel.addRow(tbData);
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbCity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCompany;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

}
