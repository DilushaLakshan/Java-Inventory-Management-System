/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package grocery_shop_sample_1;

import java.sql.*;
import com.mysql.cj.protocol.Resultset;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DILUSHA LAKSHAN
 */
public class Products extends javax.swing.JFrame {

    private Manage_GRN obj;
    private invoice inObj;

    /**
     * Creates new form Products
     */
    public Products() {
        initComponents();
        loadCategory();
        loadProductData();
    }

    public Products(Manage_GRN gRN) {
        initComponents();
        loadCategory();
        loadProductData();
        this.obj = gRN;
    }
    
    public Products(invoice i){
        initComponents();
        loadCategory();
        loadProductData();
        this.inObj = i;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnManageStock = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtNewCategory = new javax.swing.JTextField();
        btnNewCategory = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 1, 24)); // NOI18N
        jLabel1.setText("MANAGE PRODUCTS");

        jLabel2.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel2.setText("ID");

        jLabel3.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel3.setText("Name");

        txtID.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N

        txtName.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel4.setText("Category");

        cmbCategory.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N

        btnAdd.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnManageStock.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        btnManageStock.setText("MANAGE STOCKS");
        btnManageStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageStockActionPerformed(evt);
            }
        });

        tblProducts.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProducts);

        jLabel5.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel5.setText("New Category");

        txtNewCategory.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N

        btnNewCategory.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        btnNewCategory.setText("ADD CATEGORY");
        btnNewCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCategoryActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon("E:\\Images\\AURORA.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(379, 379, 379)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addGap(88, 88, 88))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(41, 41, 41)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnManageStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtNewCategory)
                                    .addComponent(btnNewCategory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSeparator1))
                                .addGap(18, 18, 18)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addGap(13, 13, 13)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnManageStock)
                        .addGap(42, 42, 42)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNewCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNewCategory))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            if (txtID.getText().isEmpty() == true) {
                JOptionPane.showMessageDialog(rootPane, "Enter the ID or Code of the Product");
            } else if (txtName.getText().isEmpty() == true) {
                JOptionPane.showMessageDialog(rootPane, "Enter the Name of the Product");
            } else {
                int id = Integer.valueOf(txtID.getText());
                String name = String.valueOf(txtName.getText());
                String categoryName = String.valueOf(cmbCategory.getSelectedItem());

                ResultSet rs = dbConnection.execute("SELECT * FROM `product` WHERE `code`='" + id + "'");
                if (rs.next()) {
                    JOptionPane.showMessageDialog(rootPane, "This Product Id has been alredy used. Try another Product ID...!!!");
                } else {
                    //get id of the category
                    ResultSet categoryRS = dbConnection.execute("SELECT * FROM `category` WHERE `name`='" + categoryName + "'");
                    if (categoryRS.next()) {
                        int categoryID = categoryRS.getInt("code");
                        ResultSet productRS = dbConnection.execute("INSERT INTO `product` (`code`,`name`,`category_id`) VALUES ('" + id + "','" + name + "','" + categoryID + "')");
                        JOptionPane.showMessageDialog(rootPane, "Insertion Successfull");
                        loadProductData();
                    } else {
                        int categoryID = 0;
                        ResultSet productRS = dbConnection.execute("INSERT INTO `product` (`code`,`name`,`category_id`) VALUES ('" + id + "','" + name + "','" + categoryID + "')");
                        JOptionPane.showMessageDialog(rootPane, "Insertion Successfull");
                        loadProductData();
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    //when click on a row, data set into each text field
    private void tblProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductsMouseClicked

        try {

            int selectedRowIndex = tblProducts.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();

            txtID.setText(model.getValueAt(selectedRowIndex, 0).toString());
            txtName.setText(model.getValueAt(selectedRowIndex, 1).toString());
            cmbCategory.setSelectedItem(model.getValueAt(selectedRowIndex, 2).toString());
            txtID.setEditable(false);

            if (evt.getClickCount() == 2) {
                if (obj != null) {
                    obj.setProductName(String.valueOf(tblProducts.getValueAt(selectedRowIndex, 1)));
                    obj.setcategory(String.valueOf(tblProducts.getValueAt(selectedRowIndex, 2)));
                    obj.setProductID(String.valueOf(tblProducts.getValueAt(selectedRowIndex, 0)));

                    this.dispose();
                }else if(inObj != null){
                    inObj.setProName(String.valueOf(tblProducts.getValueAt(selectedRowIndex, 1)));
                    inObj.setProID(String.valueOf(tblProducts.getValueAt(selectedRowIndex, 0)));
                    
                    this.dispose();
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_tblProductsMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            if (txtID.getText().isEmpty() == true) {
                JOptionPane.showMessageDialog(rootPane, "Enter the ID or Code of the Product");
            } else if (txtName.getText().isEmpty() == true) {
                JOptionPane.showMessageDialog(rootPane, "Enter the Name of the Product");
            } else {
                int id = Integer.valueOf(txtID.getText());
                String name = String.valueOf(txtName.getText());
                String categoryName = String.valueOf(cmbCategory.getSelectedItem());

                ResultSet rs = dbConnection.execute("SELECT * FROM `product` WHERE `code`='" + id + "'");
                if (rs.next()) {
                    //get id of the category
                    ResultSet categoryRS = dbConnection.execute("SELECT * FROM `category` WHERE `name`='" + categoryName + "'");
                    if (categoryRS.next()) {
                        int categoryID = categoryRS.getInt("code");
                        ResultSet productRS = dbConnection.execute("UPDATE `product` SET `code`='" + id + "', `name`='" + name + "' WHERE `category_id`='" + categoryID + "'");
                        JOptionPane.showMessageDialog(rootPane, "Successfully Updated");
                        loadProductData();
                    } else {
                        int categoryID = 0;
                        ResultSet productRS = dbConnection.execute("UPDATE `product` SET `code`='" + id + "', `name`='" + name + "' WHERE `category_id`='" + categoryID + "'");
                        JOptionPane.showMessageDialog(rootPane, "Successfully Updated");
                        loadProductData();
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "This Product Id hasnot been alredy used. Try another Correct Product ID...!!!");
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            if (txtID.getText().isEmpty() == true) {
                JOptionPane.showMessageDialog(rootPane, "Enter the ID or Code of the Product");
            } else {
                int id = Integer.valueOf(txtID.getText());
                String categoryName = String.valueOf(cmbCategory.getSelectedItem());

                ResultSet rs = dbConnection.execute("SELECT * FROM `product` WHERE `code`='" + id + "'");
                if (rs.next()) {
                    ResultSet productRS = dbConnection.execute("DELETE FROM `product` WHERE `code`='" + id + "'");
                    JOptionPane.showMessageDialog(rootPane, "Successfully Updated");
                    loadProductData();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "This Product Id hasnot been alredy used. Try another Correct Product ID...!!!");
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnManageStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageStockActionPerformed
        try {
            if (txtID.getText().isEmpty() == true) {
                JOptionPane.showMessageDialog(rootPane, "Enter the Product ID or Code");
            } else {
                new Manage_Stocks(String.valueOf(txtID.getText())).setVisible(true);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_btnManageStockActionPerformed

    private void btnNewCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCategoryActionPerformed
        try{
            String newCategory = String.valueOf(txtNewCategory.getText());
        if(newCategory.isEmpty() == true){
            JOptionPane.showMessageDialog(rootPane, "Enter the new category");
        }else{
            ResultSet categoryRS = dbConnection.execute("INSERT INTO `category` (`name`) VALUES ('"+newCategory+"')");
            JOptionPane.showMessageDialog(rootPane, "Insertion Success");
            txtNewCategory.setText("");
            loadCategory();
        }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_btnNewCategoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Products().setVisible(true);
            }
        });
    }

    //load category names to the combo box
    private void loadCategory() {
        try {
            ResultSet rs = dbConnection.execute("SELECT * FROM `category`");
            while (rs.next()) {
                String name = rs.getString("name");
                cmbCategory.addItem(name);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }

    //load product data to the table
    private void loadProductData() {
        try {
            clearProductData();
            ResultSet productRS = dbConnection.execute("SELECT * FROM `product` INNER JOIN `category` ON"
                    + "`product`.`category_id`=`category`.`code` ORDER BY `product`.`code` ASC");

            DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();
            model.setRowCount(0);

            while (productRS.next()) {
                Vector<String> vector = new Vector<>();
                vector.add(productRS.getString("product.code"));
                vector.add(productRS.getString("product.name"));
                vector.add(productRS.getString("category.name"));
                model.addRow(vector);

                tblProducts.setModel(model);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }

    //clear data in the table
    private void clearProductData() {
        try {
            //tblProducts.setModel(new DefaultTableModel(null, new String[id,name,category]));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnManageStock;
    private javax.swing.JButton btnNewCategory;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNewCategory;
    // End of variables declaration//GEN-END:variables
}
